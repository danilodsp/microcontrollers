
apagar_eeprom.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000232  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000006  00800100  00800100  000002a6  2**0
                  ALLOC
  2 .debug_aranges 00000020  00000000  00000000  000002a6  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_pubnames 00000037  00000000  00000000  000002c6  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00000337  00000000  00000000  000002fd  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 000000d3  00000000  00000000  00000634  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   0000023b  00000000  00000000  00000707  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000020  00000000  00000000  00000944  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    000000ea  00000000  00000000  00000964  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000000d8  00000000  00000000  00000a4e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a6 30       	cpi	r26, 0x06	; 6
  80:	b1 07       	cpc	r27, r17
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 48 00 	call	0x90	; 0x90 <main>
  88:	0c 94 17 01 	jmp	0x22e	; 0x22e <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <main>:

volatile int valor;
uint16_t addr;
volatile int cont;

int main(void){
  90:	ef 92       	push	r14
  92:	ff 92       	push	r15
  94:	0f 93       	push	r16
  96:	1f 93       	push	r17
	valor = 0x00;
  98:	10 92 01 01 	sts	0x0101, r1
  9c:	10 92 00 01 	sts	0x0100, r1
	addr = 0x000;
	cont = 0;
  a0:	10 92 05 01 	sts	0x0105, r1
  a4:	10 92 04 01 	sts	0x0104, r1
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  a8:	04 ec       	ldi	r16, 0xC4	; 196
  aa:	19 e0       	ldi	r17, 0x09	; 9
  ac:	c8 01       	movw	r24, r16
  ae:	01 97       	sbiw	r24, 0x01	; 1
  b0:	f1 f7       	brne	.-4      	; 0xae <main+0x1e>

	_delay_ms(10);
	addr = 11;
  b2:	8b e0       	ldi	r24, 0x0B	; 11
  b4:	90 e0       	ldi	r25, 0x00	; 0
  b6:	90 93 03 01 	sts	0x0103, r25
  ba:	80 93 02 01 	sts	0x0102, r24
	valor = 0x01;
  be:	21 e0       	ldi	r18, 0x01	; 1
  c0:	e2 2e       	mov	r14, r18
  c2:	f1 2c       	mov	r15, r1
  c4:	f0 92 01 01 	sts	0x0101, r15
  c8:	e0 92 00 01 	sts	0x0100, r14
	eeprom_write_word((uint16_t*)addr,valor);
  cc:	60 91 00 01 	lds	r22, 0x0100
  d0:	70 91 01 01 	lds	r23, 0x0101
  d4:	0e 94 04 01 	call	0x208	; 0x208 <__eewr_word_m328p>
  d8:	c8 01       	movw	r24, r16
  da:	01 97       	sbiw	r24, 0x01	; 1
  dc:	f1 f7       	brne	.-4      	; 0xda <main+0x4a>
	_delay_ms(10);

	_delay_ms(10);
	addr = 13;
  de:	c8 01       	movw	r24, r16
  e0:	01 97       	sbiw	r24, 0x01	; 1
  e2:	f1 f7       	brne	.-4      	; 0xe0 <main+0x50>
  e4:	8d e0       	ldi	r24, 0x0D	; 13
  e6:	90 e0       	ldi	r25, 0x00	; 0
  e8:	90 93 03 01 	sts	0x0103, r25
  ec:	80 93 02 01 	sts	0x0102, r24
	valor = 0x01;
  f0:	f0 92 01 01 	sts	0x0101, r15
  f4:	e0 92 00 01 	sts	0x0100, r14
	eeprom_write_word((uint16_t*)addr,valor);
  f8:	60 91 00 01 	lds	r22, 0x0100
  fc:	70 91 01 01 	lds	r23, 0x0101
 100:	0e 94 04 01 	call	0x208	; 0x208 <__eewr_word_m328p>
 104:	c8 01       	movw	r24, r16
 106:	01 97       	sbiw	r24, 0x01	; 1
 108:	f1 f7       	brne	.-4      	; 0x106 <main+0x76>
	_delay_ms(10);

	addr = 139;
 10a:	8b e8       	ldi	r24, 0x8B	; 139
 10c:	90 e0       	ldi	r25, 0x00	; 0
 10e:	90 93 03 01 	sts	0x0103, r25
 112:	80 93 02 01 	sts	0x0102, r24
	valor = 0x01;
 116:	f0 92 01 01 	sts	0x0101, r15
 11a:	e0 92 00 01 	sts	0x0100, r14
	eeprom_write_word((uint16_t*)addr,valor);
 11e:	60 91 00 01 	lds	r22, 0x0100
 122:	70 91 01 01 	lds	r23, 0x0101
 126:	0e 94 04 01 	call	0x208	; 0x208 <__eewr_word_m328p>
 12a:	c8 01       	movw	r24, r16
 12c:	01 97       	sbiw	r24, 0x01	; 1
 12e:	f1 f7       	brne	.-4      	; 0x12c <main+0x9c>
	_delay_ms(10);

	addr = 141;
 130:	8d e8       	ldi	r24, 0x8D	; 141
 132:	90 e0       	ldi	r25, 0x00	; 0
 134:	90 93 03 01 	sts	0x0103, r25
 138:	80 93 02 01 	sts	0x0102, r24
	valor = 0x02;
 13c:	82 e0       	ldi	r24, 0x02	; 2
 13e:	90 e0       	ldi	r25, 0x00	; 0
 140:	90 93 01 01 	sts	0x0101, r25
 144:	80 93 00 01 	sts	0x0100, r24
	eeprom_write_word((uint16_t*)addr,valor);
 148:	60 91 00 01 	lds	r22, 0x0100
 14c:	70 91 01 01 	lds	r23, 0x0101
 150:	8d e8       	ldi	r24, 0x8D	; 141
 152:	90 e0       	ldi	r25, 0x00	; 0
 154:	0e 94 04 01 	call	0x208	; 0x208 <__eewr_word_m328p>
 158:	c8 01       	movw	r24, r16
 15a:	01 97       	sbiw	r24, 0x01	; 1
 15c:	f1 f7       	brne	.-4      	; 0x15a <main+0xca>
	_delay_ms(10);

	addr = 267;
 15e:	8b e0       	ldi	r24, 0x0B	; 11
 160:	91 e0       	ldi	r25, 0x01	; 1
 162:	90 93 03 01 	sts	0x0103, r25
 166:	80 93 02 01 	sts	0x0102, r24
	valor = 0x01;
 16a:	f0 92 01 01 	sts	0x0101, r15
 16e:	e0 92 00 01 	sts	0x0100, r14
	eeprom_write_word((uint16_t*)addr,valor);
 172:	60 91 00 01 	lds	r22, 0x0100
 176:	70 91 01 01 	lds	r23, 0x0101
 17a:	0e 94 04 01 	call	0x208	; 0x208 <__eewr_word_m328p>
 17e:	c8 01       	movw	r24, r16
 180:	01 97       	sbiw	r24, 0x01	; 1
 182:	f1 f7       	brne	.-4      	; 0x180 <main+0xf0>
	_delay_ms(10);

	addr = 269;
 184:	8d e0       	ldi	r24, 0x0D	; 13
 186:	91 e0       	ldi	r25, 0x01	; 1
 188:	90 93 03 01 	sts	0x0103, r25
 18c:	80 93 02 01 	sts	0x0102, r24
	valor = 0x03;
 190:	83 e0       	ldi	r24, 0x03	; 3
 192:	90 e0       	ldi	r25, 0x00	; 0
 194:	90 93 01 01 	sts	0x0101, r25
 198:	80 93 00 01 	sts	0x0100, r24
	eeprom_write_word((uint16_t*)addr,valor);
 19c:	60 91 00 01 	lds	r22, 0x0100
 1a0:	70 91 01 01 	lds	r23, 0x0101
 1a4:	8d e0       	ldi	r24, 0x0D	; 13
 1a6:	91 e0       	ldi	r25, 0x01	; 1
 1a8:	0e 94 04 01 	call	0x208	; 0x208 <__eewr_word_m328p>
 1ac:	c8 01       	movw	r24, r16
 1ae:	01 97       	sbiw	r24, 0x01	; 1
 1b0:	f1 f7       	brne	.-4      	; 0x1ae <main+0x11e>
	_delay_ms(10);

	addr = 395;
 1b2:	8b e8       	ldi	r24, 0x8B	; 139
 1b4:	91 e0       	ldi	r25, 0x01	; 1
 1b6:	90 93 03 01 	sts	0x0103, r25
 1ba:	80 93 02 01 	sts	0x0102, r24
	valor = 0x01;
 1be:	f0 92 01 01 	sts	0x0101, r15
 1c2:	e0 92 00 01 	sts	0x0100, r14
	eeprom_write_word((uint16_t*)addr,valor);
 1c6:	60 91 00 01 	lds	r22, 0x0100
 1ca:	70 91 01 01 	lds	r23, 0x0101
 1ce:	0e 94 04 01 	call	0x208	; 0x208 <__eewr_word_m328p>
 1d2:	c8 01       	movw	r24, r16
 1d4:	01 97       	sbiw	r24, 0x01	; 1
 1d6:	f1 f7       	brne	.-4      	; 0x1d4 <main+0x144>
	_delay_ms(10);

	addr = 397;
 1d8:	8d e8       	ldi	r24, 0x8D	; 141
 1da:	91 e0       	ldi	r25, 0x01	; 1
 1dc:	90 93 03 01 	sts	0x0103, r25
 1e0:	80 93 02 01 	sts	0x0102, r24
	valor = 0x04;
 1e4:	84 e0       	ldi	r24, 0x04	; 4
 1e6:	90 e0       	ldi	r25, 0x00	; 0
 1e8:	90 93 01 01 	sts	0x0101, r25
 1ec:	80 93 00 01 	sts	0x0100, r24
	eeprom_write_word((uint16_t*)addr,valor);
 1f0:	60 91 00 01 	lds	r22, 0x0100
 1f4:	70 91 01 01 	lds	r23, 0x0101
 1f8:	8d e8       	ldi	r24, 0x8D	; 141
 1fa:	91 e0       	ldi	r25, 0x01	; 1
 1fc:	0e 94 04 01 	call	0x208	; 0x208 <__eewr_word_m328p>
 200:	c8 01       	movw	r24, r16
 202:	01 97       	sbiw	r24, 0x01	; 1
 204:	f1 f7       	brne	.-4      	; 0x202 <main+0x172>
 206:	ff cf       	rjmp	.-2      	; 0x206 <main+0x176>

00000208 <__eewr_word_m328p>:
 208:	0e 94 09 01 	call	0x212	; 0x212 <__eewr_byte_m328p>
 20c:	27 2f       	mov	r18, r23
 20e:	0c 94 0a 01 	jmp	0x214	; 0x214 <__eewr_r18_m328p>

00000212 <__eewr_byte_m328p>:
 212:	26 2f       	mov	r18, r22

00000214 <__eewr_r18_m328p>:
 214:	f9 99       	sbic	0x1f, 1	; 31
 216:	fe cf       	rjmp	.-4      	; 0x214 <__eewr_r18_m328p>
 218:	1f ba       	out	0x1f, r1	; 31
 21a:	92 bd       	out	0x22, r25	; 34
 21c:	81 bd       	out	0x21, r24	; 33
 21e:	20 bd       	out	0x20, r18	; 32
 220:	0f b6       	in	r0, 0x3f	; 63
 222:	f8 94       	cli
 224:	fa 9a       	sbi	0x1f, 2	; 31
 226:	f9 9a       	sbi	0x1f, 1	; 31
 228:	0f be       	out	0x3f, r0	; 63
 22a:	01 96       	adiw	r24, 0x01	; 1
 22c:	08 95       	ret

0000022e <_exit>:
 22e:	f8 94       	cli

00000230 <__stop_program>:
 230:	ff cf       	rjmp	.-2      	; 0x230 <__stop_program>
